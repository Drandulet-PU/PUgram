from aiogram import F, Router, Bot
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from random import randint
from requests import set_user, set_review, get_review
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, \
                          InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters.callback_data import CallbackData


from keyboards import keys, inline_keys


rt = Router()



class ReviewState(StatesGroup):
    waiting = State()

@rt.message(CommandStart())
async def command_start_handler(message: Message):
    await set_user(message.from_user.id)
    await message.answer(f"ü¶ú- –ß–∏–∫ –ß–∏—Ä–∏–∫!", reply_markup=keys)
        
@rt.message(F.text == '–î–∞—Ç—å –∑–µ—Ä–Ω–∞')
async def command_feed_handler(message: Message):
    for i in range(0, 20):
        await message.answer(f"–ß–∏–∫ –ß–∏—Ä–∏–∫!")
        await asyncio.sleep(randint(0, 20))

@rt.message(F.text == '–û—Å—Ç–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤')
async def command_ask_review_handler(message: Message, state: FSMContext):
    review = await get_review(message.from_user.id)
    if review:
        await message.answer(f"ü¶ú- –í—ã —É–∂–µ –æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–∞–º –æ—Ç–∑—ã–≤!\n\n{review.text}", reply_markup=inline_keys)
    else:
        await message.answer("ü¶ú- –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤!\n–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å.\n–ê –∑–∞ —á—Ç–æ —Ä–∞–∑—Ä–∞–±–∞ —Ä–∞—Å—Å—Ç—Ä–µ–ª—è—Ç—å.")
        await state.set_state(ReviewState.waiting)
    
@rt.message(F.text == '–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
async def command_problem_handler(message:Message):
    await message.answer('ü¶ú- –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!')

@rt.callback_query(F.data == 'rewrite')
async def command_rewrite_handler(callback: CallbackQuery, state: FSMContext):
    await callback.answer(':D')
    await callback.message.answer('ü¶ú- –î–µ—Ä–∑–∞–π—Ç–µ!')
    await state.set_state(ReviewState.waiting)

@rt.message(ReviewState.waiting)
async def command_review_handler(message: Message, state: FSMContext, bot:Bot):
    a = await set_review(message.from_user.id, message.text)
    await message.answer(f"ü¶ú- –í–∞—à –æ—Ç–∑—ã–≤ N{str(a)} –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è!\n–ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å.", reply_markup=keys)
    await state.clear()
    
    msg = f"–û—Ç–∑—ã–≤ N{str(a)} –æ—Ç {message.from_user.id}\n\n{message.text}"
    await bot.send_message(1045039269, msg)
    